import process from 'node:process'
import { execSync } from 'node:child_process'
import { consola } from 'consola'
import { ofetch } from 'ofetch'

// update all of this
const owner = 'barbapapazes'
const repo = 'website'
const branch = 'chore/update-packages'

/**
 * This script is used in a CI to automatically add or remove new UnJS packages to the website.
 */
async function main() {
  execSync('jiti scripts/repos-packages.ts --create --delete')

  execSync('git config user.name "barbapapazes"')
  execSync('git config user.email "e.soubiran25@gmail.com"')

  try {
    execSync(`git checkout -b ${branch}`)
  }
  catch (err) {
    execSync(`git checkout ${branch}`)
  }

  execSync('git add ./content/4.packages/')
  try {
    execSync('git commit -m "feat: update packages"')
  }
  catch (err) {
    consola.info('No changes to commit.')
    process.exit(0)
  }
  execSync(`git push -u fork ${branch} --force`)

  const [currentPR] = await ofetch(`https://api.github.com/repos/${owner}/${repo}/pulls?head=${owner}:${branch}`)

  // Create PR if none exists
  if (!currentPR) {
    return await ofetch(`https://api.github.com/repos/${owner}/${repo}/pulls`, {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${process.env.GITHUB_TOKEN}`,
      },
      body: {
        title: 'feat: update packages',
        head: `${owner}:${branch}`,
        base: 'main',
        body: 'This PR update packages of the website.\n\n_This PR is automatically generated by a script._',
      },
    })
  }
}

main().catch((err) => {
  consola.error(err)
  process.exit(1)
})
